<AML>
 <Item type="Method" id="42A9B7F6E4E046A4A85A6D26E753D361" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[//debugger;
var targetColumnIndex = colNumber;
if (targetColumnIndex < 0) { top.aras.AlertError("Error: Column not found"); return; }
if (!gridApplet) { return; }

// read from parent Item
var itemTypeId = parent.thisItem.getProperty("item_type_id","");
if (itemTypeId === "") { return; }

var itemTypeName = parent.thisItem.getPropertyAttribute("item_type_id","keyed_name","");

// Get relationItem
var temp = parent.thisItem.getItemsByXPath("//Relationships/Item[@id='"+relationshipID+"']");
var relItm = top.aras.newIOMItem("");
relItm.loadAML(temp.node.xml);
var formId = relItm.getProperty("form_id","");
if (formId === "") {return;}

// Get defined ItemType stages from relationship. To be used as list values
var aml = "<Item type='Form' action='get' select='id,name' id='"+formId+"' >";
aml += "<Relationships>";
aml += " <Item type='Body' action='get' select='id'>";
aml += "  <Relationships>";
aml += "   <Item type='Field' action='get' select='name' orderBy='name' >";
aml += "   </Item>";
aml += "  </Relationships>";
aml += " </Item>";
aml += "</Relationships>";
aml += "</Item>";

var formItem = top.aras.newIOMItem("");
formItem.loadAML(aml);
formItem = formItem.apply();

var formFieldItems = formItem.getItemsByXPath("//Relationships/Item[@type='Field']");
if (formFieldItems.isError()||formFieldItems.getItemCount()<1 ) {
    top.aras.AlertError("No Fields for Form with Id '+formId+' found !");
    return;
}

// Create arrays for the list values (ids) and labels (names)
var labelArray = [];
var idArray = [];
//var labelArray = new Array(" ");  // add empty list item at top
//var idArray = new Array(" ");     // add empty list item at top
for (var k=0; k<formFieldItems.getItemCount(); k++) {
  var id = formFieldItems.getItemByIndex(k).getProperty("name","");
  if (id !== "" && id !== "item_info") {
    //   var label = formFieldItems.getItemByIndex(k).getProperty("label","");
    //   if (label === ""){label = id;}
      label = id;
      idArray.push(id);
      labelArray.push(label); 
    }
}

// Add the dropdown to the cell
var delim = gridApplet.Delimeter;
//gridApplet.cells(relationshipID,targetColumnIndex).setEditType(3);  // MultiVal List
gridApplet.cells(relationshipID,targetColumnIndex).setEditType(2);  // Combobox
//grid.columns_Experimental.set(colNumber, 'editType', 'FilterComboBox');

var field = grid.columns_Experimental.get(targetColumnIndex, "name");
gridApplet.columns_Experimental.set( field, "comboList", idArray, labelArray); ]]></method_code>
  <method_type>JavaScript</method_type>
  <name>ffr_FormFieldRule_Field_dropdown</name>
 </Item>
</AML>